package team.epm.dms.view;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 13 21:55:02 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DmsWorkflowTemplateStatusVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CreatedAt {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getCreatedAt();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setCreatedAt((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        EntityCode {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getEntityCode();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setEntityCode((String)value);
            }
        }
        ,
        FinishAt {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getFinishAt();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setFinishAt((Date)value);
            }
        }
        ,
        Id {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getId();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setId((String)value);
            }
        }
        ,
        RunId {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getRunId();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setRunId((String)value);
            }
        }
        ,
        StepNo {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getStepNo();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setStepNo((Number)value);
            }
        }
        ,
        TemplateId {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getTemplateId();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setTemplateId((String)value);
            }
        }
        ,
        WriteBy {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getWriteBy();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setWriteBy((String)value);
            }
        }
        ,
        WriteStatus {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getWriteStatus();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setWriteStatus((String)value);
            }
        }
        ,
        ComId {
            public Object get(DmsWorkflowTemplateStatusVORowImpl obj) {
                return obj.getComId();
            }

            public void put(DmsWorkflowTemplateStatusVORowImpl obj,
                            Object value) {
                obj.setComId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DmsWorkflowTemplateStatusVORowImpl object);

        public abstract void put(DmsWorkflowTemplateStatusVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CREATEDAT = AttributesEnum.CreatedAt.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int ENTITYCODE = AttributesEnum.EntityCode.index();
    public static final int FINISHAT = AttributesEnum.FinishAt.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int RUNID = AttributesEnum.RunId.index();
    public static final int STEPNO = AttributesEnum.StepNo.index();
    public static final int TEMPLATEID = AttributesEnum.TemplateId.index();
    public static final int WRITEBY = AttributesEnum.WriteBy.index();
    public static final int WRITESTATUS = AttributesEnum.WriteStatus.index();
    public static final int COMID = AttributesEnum.ComId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DmsWorkflowTemplateStatusVORowImpl() {
    }

    /**
     * Gets DmsWorkflowTemplateStatusEO entity object.
     * @return the DmsWorkflowTemplateStatusEO
     */
    public EntityImpl getDmsWorkflowTemplateStatusEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for CREATED_AT using the alias name CreatedAt.
     * @return the CREATED_AT
     */
    public Date getCreatedAt() {
        return (Date) getAttributeInternal(CREATEDAT);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_AT using the alias name CreatedAt.
     * @param value value to set the CREATED_AT
     */
    public void setCreatedAt(Date value) {
        setAttributeInternal(CREATEDAT, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for ENTITY_CODE using the alias name EntityCode.
     * @return the ENTITY_CODE
     */
    public String getEntityCode() {
        return (String) getAttributeInternal(ENTITYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_CODE using the alias name EntityCode.
     * @param value value to set the ENTITY_CODE
     */
    public void setEntityCode(String value) {
        setAttributeInternal(ENTITYCODE, value);
    }

    /**
     * Gets the attribute value for FINISH_AT using the alias name FinishAt.
     * @return the FINISH_AT
     */
    public Date getFinishAt() {
        return (Date) getAttributeInternal(FINISHAT);
    }

    /**
     * Sets <code>value</code> as attribute value for FINISH_AT using the alias name FinishAt.
     * @param value value to set the FINISH_AT
     */
    public void setFinishAt(Date value) {
        setAttributeInternal(FINISHAT, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for RUN_ID using the alias name RunId.
     * @return the RUN_ID
     */
    public String getRunId() {
        return (String) getAttributeInternal(RUNID);
    }

    /**
     * Sets <code>value</code> as attribute value for RUN_ID using the alias name RunId.
     * @param value value to set the RUN_ID
     */
    public void setRunId(String value) {
        setAttributeInternal(RUNID, value);
    }

    /**
     * Gets the attribute value for STEP_NO using the alias name StepNo.
     * @return the STEP_NO
     */
    public Number getStepNo() {
        return (Number) getAttributeInternal(STEPNO);
    }

    /**
     * Sets <code>value</code> as attribute value for STEP_NO using the alias name StepNo.
     * @param value value to set the STEP_NO
     */
    public void setStepNo(Number value) {
        setAttributeInternal(STEPNO, value);
    }

    /**
     * Gets the attribute value for TEMPLATE_ID using the alias name TemplateId.
     * @return the TEMPLATE_ID
     */
    public String getTemplateId() {
        return (String) getAttributeInternal(TEMPLATEID);
    }

    /**
     * Sets <code>value</code> as attribute value for TEMPLATE_ID using the alias name TemplateId.
     * @param value value to set the TEMPLATE_ID
     */
    public void setTemplateId(String value) {
        setAttributeInternal(TEMPLATEID, value);
    }

    /**
     * Gets the attribute value for WRITE_BY using the alias name WriteBy.
     * @return the WRITE_BY
     */
    public String getWriteBy() {
        return (String) getAttributeInternal(WRITEBY);
    }

    /**
     * Sets <code>value</code> as attribute value for WRITE_BY using the alias name WriteBy.
     * @param value value to set the WRITE_BY
     */
    public void setWriteBy(String value) {
        setAttributeInternal(WRITEBY, value);
    }

    /**
     * Gets the attribute value for WRITE_STATUS using the alias name WriteStatus.
     * @return the WRITE_STATUS
     */
    public String getWriteStatus() {
        return (String) getAttributeInternal(WRITESTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for WRITE_STATUS using the alias name WriteStatus.
     * @param value value to set the WRITE_STATUS
     */
    public void setWriteStatus(String value) {
        setAttributeInternal(WRITESTATUS, value);
    }

    /**
     * Gets the attribute value for COM_ID using the alias name ComId.
     * @return the COM_ID
     */
    public String getComId() {
        return (String) getAttributeInternal(COMID);
    }

    /**
     * Sets <code>value</code> as attribute value for COM_ID using the alias name ComId.
     * @param value value to set the COM_ID
     */
    public void setComId(String value) {
        setAttributeInternal(COMID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
